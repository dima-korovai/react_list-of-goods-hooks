{"version":3,"sources":["enums/sortType.ts","components/goods.tsx","App.tsx","getReorderedGoods.ts","index.tsx"],"names":["SortType","Goods","goods","map","good","React","memo","goodsFromServer","App","useState","NONE","sortType","setType","isReversed","setReversed","reorderedGoods","visibleGoods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","reversed","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,4ECMNC,EAAyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SAMFC,MAAMC,KAAKL,G,iBDhBdD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KEQL,IAAMO,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA4BC,mBAAST,EAASU,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,ECjBD,SACLb,EADK,GAGJ,IADCS,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNG,EAAY,YAAOd,GAEzB,OAAQS,GACN,KAAKX,EAASiB,SACZD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAE1B,MACF,KAAKpB,EAASsB,OACZN,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGI,OAASH,EAAGG,UAU5B,OAJIV,GACFG,EAAaQ,UAGRR,EDRgBS,CACrBlB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,UACV,CACE,WAAYjB,IAAaX,EAASiB,WAGtCY,QAAS,kBAAMjB,EAAQZ,EAASiB,WARlC,iCAaA,wBACEU,KAAK,SACLD,UAAWE,IACT,SAAU,aACV,CACE,WAAYjB,IAAaX,EAASsB,SAGtCO,QAAS,kBAAMjB,EAAQZ,EAASsB,SARlC,4BAaA,wBACEO,QAAS,kBAAMf,GAAY,SAAAgB,GAAQ,OAAKA,MACxCH,KAAK,SACLD,UAAWE,IACT,SAAU,aACV,CACE,YAA2B,IAAff,IANlB,sBAaEF,IAAaX,EAASU,MAAQG,IAE5B,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,GAAY,GACZF,EAAQZ,EAASU,OALrB,sBAaN,cAAC,EAAD,CAAOR,MAAOa,QEpFpBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3baf0a31.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nconst Goods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default React.memo(Goods);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport Goods from './components/goods';\nimport { getReorderedGoods } from './getReorderedGoods';\nimport { SortType } from './enums/sortType';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortType, setType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReversed(reversed => !reversed)}\n          type=\"button\"\n          className={classNames(\n            'button', 'is-warning',\n            {\n              'is-light': isReversed !== true,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setReversed(false);\n                setType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <Goods goods={reorderedGoods} />\n    </div>\n  );\n};\n","import { SortType } from './enums/sortType';\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}